{"version":3,"file":"static/vendor-wallets.eb9c939a791b36eb3afa.js","mappings":"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","sources":["webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-app-str/lib-es/utils.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-app-str/lib-es/Str.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/errors/dist/index.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/logs/lib-es/index.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport-u2f/lib-es/TransportU2F.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/errors/lib-es/helpers.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/errors/lib-es/index.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/logs/lib-es/index.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport-webusb/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/devices/node_modules/@ledgerhq/errors/lib-es/helpers.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/devices/node_modules/@ledgerhq/errors/lib-es/index.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/devices/lib-es/index.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/webusb.js","webpack://stellar-account-viewer-v2/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js"],"sourcesContent":["/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2017-2018 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\nimport base32 from \"base32.js\";\nimport nacl from \"tweetnacl\";\nimport { sha256 } from \"sha.js\";\n// TODO use bip32-path library\nexport function splitPath(path) {\n    const result = [];\n    const components = path.split(\"/\");\n    components.forEach(element => {\n        let number = parseInt(element, 10);\n        if (isNaN(number)) {\n            return; // FIXME shouldn't it throws instead?\n        }\n        if (element.length > 1 && element[element.length - 1] === \"'\") {\n            number += 0x80000000;\n        }\n        result.push(number);\n    });\n    return result;\n}\nexport function foreach(arr, callback) {\n    function iterate(index, array, result) {\n        if (index >= array.length) {\n            return result;\n        }\n        else {\n            return callback(array[index], index).then(function (res) {\n                result.push(res);\n                return iterate(index + 1, array, result);\n            });\n        }\n    }\n    return Promise.resolve().then(() => iterate(0, arr, []));\n}\nexport function crc16xmodem(buf, previous) {\n    let crc = typeof previous !== \"undefined\" ? ~~previous : 0x0;\n    for (let index = 0; index < buf.length; index++) {\n        const byte = buf[index];\n        let code = (crc >>> 8) & 0xff;\n        code ^= byte & 0xff;\n        code ^= code >>> 4;\n        crc = (crc << 8) & 0xffff;\n        crc ^= code;\n        code = (code << 5) & 0xffff;\n        crc ^= code;\n        code = (code << 7) & 0xffff;\n        crc ^= code;\n    }\n    return crc;\n}\nexport function encodeEd25519PublicKey(rawPublicKey) {\n    const versionByte = 6 << 3; // 'G'\n    const data = Buffer.from(rawPublicKey);\n    const versionBuffer = Buffer.from([versionByte]);\n    const payload = Buffer.concat([versionBuffer, data]);\n    const checksum = Buffer.alloc(2);\n    checksum.writeUInt16LE(crc16xmodem(payload), 0);\n    const unencoded = Buffer.concat([payload, checksum]);\n    return base32.encode(unencoded);\n}\nexport function verifyEd25519Signature(data, signature, publicKey) {\n    return nacl.sign.detached.verify(new Uint8Array(data.toJSON().data), new Uint8Array(signature.toJSON().data), new Uint8Array(publicKey.toJSON().data));\n}\nexport function hash(data) {\n    const hasher = new sha256();\n    hasher.update(data, \"utf8\");\n    return hasher.digest();\n}\nexport function checkStellarBip32Path(path) {\n    path.split(\"/\").forEach(function (element) {\n        if (!element.toString().endsWith(\"'\")) {\n            throw new Error(\"Detected a non-hardened path element in requested BIP32 path.\" +\n                \" Non-hardended paths are not supported at this time. Please use an all-hardened path.\" +\n                \" Example: 44'/148'/0'\");\n        }\n    });\n}\n//# sourceMappingURL=utils.js.map","import { splitPath, foreach, encodeEd25519PublicKey, verifyEd25519Signature, checkStellarBip32Path, hash, } from \"./utils\";\nconst CLA = 0xe0;\nconst INS_GET_PK = 0x02;\nconst INS_SIGN_TX = 0x04;\nconst INS_GET_CONF = 0x06;\nconst INS_SIGN_TX_HASH = 0x08;\nconst INS_KEEP_ALIVE = 0x10;\nconst APDU_MAX_SIZE = 150;\nconst P1_FIRST_APDU = 0x00;\nconst P1_MORE_APDU = 0x80;\nconst P2_LAST_APDU = 0x00;\nconst P2_MORE_APDU = 0x80;\nconst SW_OK = 0x9000;\nconst SW_CANCEL = 0x6985;\nconst SW_UNKNOWN_OP = 0x6c24;\nconst SW_MULTI_OP = 0x6c25;\nconst SW_NOT_ALLOWED = 0x6c66;\nconst SW_UNSUPPORTED = 0x6d00;\nconst SW_KEEP_ALIVE = 0x6e02;\nconst TX_MAX_SIZE = 1540;\n/**\n * Stellar API\n *\n * @example\n * import Str from \"@ledgerhq/hw-app-str\";\n * const str = new Str(transport)\n */\nexport default class Str {\n    constructor(transport, scrambleKey = \"l0v\") {\n        this.transport = transport;\n        transport.decorateAppAPIMethods(this, [\"getAppConfiguration\", \"getPublicKey\", \"signTransaction\", \"signHash\"], scrambleKey);\n    }\n    getAppConfiguration() {\n        return this.transport.send(CLA, INS_GET_CONF, 0x00, 0x00).then(response => {\n            const multiOpsEnabled = response[0] === 0x01 || response[1] < 0x02;\n            const version = \"\" + response[1] + \".\" + response[2] + \".\" + response[3];\n            return {\n                version: version,\n                multiOpsEnabled: multiOpsEnabled,\n            };\n        });\n    }\n    /**\n     * get Stellar public key for a given BIP 32 path.\n     * @param path a path in BIP 32 format\n     * @option boolValidate optionally enable key pair validation\n     * @option boolDisplay optionally enable or not the display\n     * @return an object with the publicKey (using XLM public key format) and\n     * the raw ed25519 public key.\n     * @example\n     * str.getPublicKey(\"44'/148'/0'\").then(o => o.publicKey)\n     */\n    getPublicKey(path, boolValidate, boolDisplay) {\n        checkStellarBip32Path(path);\n        const apdus = [];\n        let response;\n        const pathElts = splitPath(path);\n        const buffer = Buffer.alloc(1 + pathElts.length * 4);\n        buffer[0] = pathElts.length;\n        pathElts.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        const verifyMsg = Buffer.from(\"via lumina\", \"ascii\");\n        apdus.push(Buffer.concat([buffer, verifyMsg]));\n        let keepAlive = false;\n        return foreach(apdus, data => this.transport\n            .send(CLA, keepAlive ? INS_KEEP_ALIVE : INS_GET_PK, boolValidate ? 0x01 : 0x00, boolDisplay ? 0x01 : 0x00, data, [SW_OK, SW_KEEP_ALIVE])\n            .then(apduResponse => {\n            const status = Buffer.from(apduResponse.slice(apduResponse.length - 2)).readUInt16BE(0);\n            if (status === SW_KEEP_ALIVE) {\n                keepAlive = true;\n                apdus.push(Buffer.alloc(0));\n            }\n            response = apduResponse;\n        })).then(() => {\n            // response = Buffer.from(response, 'hex');\n            let offset = 0;\n            const rawPublicKey = response.slice(offset, offset + 32);\n            offset += 32;\n            const publicKey = encodeEd25519PublicKey(rawPublicKey);\n            if (boolValidate) {\n                const signature = response.slice(offset, offset + 64);\n                if (!verifyEd25519Signature(verifyMsg, signature, rawPublicKey)) {\n                    throw new Error(\"Bad signature. Keypair is invalid. Please report this.\");\n                }\n            }\n            return {\n                publicKey: publicKey,\n                raw: rawPublicKey,\n            };\n        });\n    }\n    /**\n     * sign a Stellar transaction.\n     * @param path a path in BIP 32 format\n     * @param transaction signature base of the transaction to sign\n     * @return an object with the signature and the status\n     * @example\n     * str.signTransaction(\"44'/148'/0'\", signatureBase).then(o => o.signature)\n     */\n    signTransaction(path, transaction) {\n        checkStellarBip32Path(path);\n        if (transaction.length > TX_MAX_SIZE) {\n            throw new Error(\"Transaction too large: max = \" + TX_MAX_SIZE + \"; actual = \" + transaction.length);\n        }\n        const apdus = [];\n        let response;\n        const pathElts = splitPath(path);\n        const bufferSize = 1 + pathElts.length * 4;\n        const buffer = Buffer.alloc(bufferSize);\n        buffer[0] = pathElts.length;\n        pathElts.forEach(function (element, index) {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        let chunkSize = APDU_MAX_SIZE - bufferSize;\n        if (transaction.length <= chunkSize) {\n            // it fits in a single apdu\n            apdus.push(Buffer.concat([buffer, transaction]));\n        }\n        else {\n            // we need to send multiple apdus to transmit the entire transaction\n            let chunk = Buffer.alloc(chunkSize);\n            let offset = 0;\n            transaction.copy(chunk, 0, offset, chunkSize);\n            apdus.push(Buffer.concat([buffer, chunk]));\n            offset += chunkSize;\n            while (offset < transaction.length) {\n                const remaining = transaction.length - offset;\n                chunkSize = remaining < APDU_MAX_SIZE ? remaining : APDU_MAX_SIZE;\n                chunk = Buffer.alloc(chunkSize);\n                transaction.copy(chunk, 0, offset, offset + chunkSize);\n                offset += chunkSize;\n                apdus.push(chunk);\n            }\n        }\n        let keepAlive = false;\n        return foreach(apdus, (data, i) => this.transport\n            .send(CLA, keepAlive ? INS_KEEP_ALIVE : INS_SIGN_TX, i === 0 ? P1_FIRST_APDU : P1_MORE_APDU, i === apdus.length - 1 ? P2_LAST_APDU : P2_MORE_APDU, data, [SW_OK, SW_CANCEL, SW_UNKNOWN_OP, SW_MULTI_OP, SW_KEEP_ALIVE])\n            .then(apduResponse => {\n            const status = Buffer.from(apduResponse.slice(apduResponse.length - 2)).readUInt16BE(0);\n            if (status === SW_KEEP_ALIVE) {\n                keepAlive = true;\n                apdus.push(Buffer.alloc(0));\n            }\n            response = apduResponse;\n        })).then(() => {\n            const status = Buffer.from(response.slice(response.length - 2)).readUInt16BE(0);\n            if (status === SW_OK) {\n                const signature = Buffer.from(response.slice(0, response.length - 2));\n                return {\n                    signature: signature,\n                };\n            }\n            else if (status === SW_UNKNOWN_OP) {\n                // pre-v2 app version: fall back on hash signing\n                return this.signHash_private(path, hash(transaction));\n            }\n            else if (status === SW_MULTI_OP) {\n                // multi-operation transaction: attempt hash signing\n                return this.signHash_private(path, hash(transaction));\n            }\n            else {\n                throw new Error(\"Transaction approval request was rejected\");\n            }\n        });\n    }\n    /**\n     * sign a Stellar transaction hash.\n     * @param path a path in BIP 32 format\n     * @param hash hash of the transaction to sign\n     * @return an object with the signature\n     * @example\n     * str.signHash(\"44'/148'/0'\", hash).then(o => o.signature)\n     */\n    signHash(path, hash) {\n        checkStellarBip32Path(path);\n        return this.signHash_private(path, hash);\n    }\n    signHash_private(path, hash) {\n        const apdus = [];\n        let response;\n        const pathElts = splitPath(path);\n        const buffer = Buffer.alloc(1 + pathElts.length * 4);\n        buffer[0] = pathElts.length;\n        pathElts.forEach(function (element, index) {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        apdus.push(Buffer.concat([buffer, hash]));\n        let keepAlive = false;\n        return foreach(apdus, data => this.transport\n            .send(CLA, keepAlive ? INS_KEEP_ALIVE : INS_SIGN_TX_HASH, 0x00, 0x00, data, [\n            SW_OK,\n            SW_CANCEL,\n            SW_NOT_ALLOWED,\n            SW_UNSUPPORTED,\n            SW_KEEP_ALIVE,\n        ])\n            .then(apduResponse => {\n            const status = Buffer.from(apduResponse.slice(apduResponse.length - 2)).readUInt16BE(0);\n            if (status === SW_KEEP_ALIVE) {\n                keepAlive = true;\n                apdus.push(Buffer.alloc(0));\n            }\n            response = apduResponse;\n        })).then(() => {\n            const status = Buffer.from(response.slice(response.length - 2)).readUInt16BE(0);\n            if (status === SW_OK) {\n                const signature = Buffer.from(response.slice(0, response.length - 2));\n                return {\n                    signature: signature,\n                };\n            }\n            else if (status === SW_CANCEL) {\n                throw new Error(\"Transaction approval request was rejected\");\n            }\n            else if (status === SW_UNSUPPORTED) {\n                throw new Error(\"Hash signing is not supported\");\n            }\n            else {\n                throw new Error(\"Hash signing not allowed. Have you enabled it in the app settings?\");\n            }\n        });\n    }\n}\n//# sourceMappingURL=Str.js.map","/* eslint-disable no-continue */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n","import EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError } from \"@ledgerhq/errors\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\n/**\n */\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport {\n  constructor() {\n    this.exchangeTimeout = 30000;\n    this.unresponsiveTimeout = 15000;\n    this.deviceModel = null;\n    this._events = new EventEmitter();\n\n    this.send = async (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [StatusCodes.OK]) => {\n      if (data.length >= 256) {\n        throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n      }\n\n      const response = await this.exchange(Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]));\n      const sw = response.readUInt16BE(response.length - 2);\n\n      if (!statusList.some(s => s === sw)) {\n        throw new TransportStatusError(sw);\n      }\n\n      return response;\n    };\n\n    this.exchangeBusyPromise = void 0;\n\n    this.exchangeAtomicImpl = async f => {\n      if (this.exchangeBusyPromise) {\n        throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n      }\n\n      let resolveBusy;\n      const busyPromise = new Promise(r => {\n        resolveBusy = r;\n      });\n      this.exchangeBusyPromise = busyPromise;\n      let unresponsiveReached = false;\n      const timeout = setTimeout(() => {\n        unresponsiveReached = true;\n        this.emit(\"unresponsive\");\n      }, this.unresponsiveTimeout);\n\n      try {\n        const res = await f();\n\n        if (unresponsiveReached) {\n          this.emit(\"responsive\");\n        }\n\n        return res;\n      } finally {\n        clearTimeout(timeout);\n        if (resolveBusy) resolveBusy();\n        this.exchangeBusyPromise = null;\n      }\n    };\n\n    this._appAPIlock = null;\n  }\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu) {\n    throw new Error(\"exchange not implemented\");\n  }\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n\n\n  setScrambleKey(_key) {}\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n\n\n  close() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName, cb) {\n    this._events.on(eventName, cb);\n  }\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n\n\n  off(eventName, cb) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event, ...args) {\n    this._events.emit(event, ...args);\n  }\n  /**\n   * Enable or not logs of the binary exchange\n   */\n\n\n  setDebugMode() {\n    console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n  }\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n\n\n  setExchangeTimeout(exchangeTimeout) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n\n\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(openTimeout = 3000, listenTimeout) {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: e => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: e => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(new TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n          }\n        }\n      });\n      const listenTimeoutId = listenTimeout ? setTimeout(() => {\n        sub.unsubscribe();\n        reject(new TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n      }, listenTimeout) : null;\n    });\n  }\n\n  decorateAppAPIMethods(self, methods, scrambleKey) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n    }\n  }\n\n  decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n    return async (...args) => {\n      const {\n        _appAPIlock\n      } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n}\nTransport.isSupported = void 0;\nTransport.list = void 0;\nTransport.listen = void 0;\nTransport.open = void 0;\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n//# sourceMappingURL=Transport.js.map","/**\n * A Log object\n */\nlet id = 0;\nconst subscribers = [];\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\n\nexport const log = (type, message, data) => {\n  const obj = {\n    type,\n    id: String(++id),\n    date: new Date()\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\n\nexport const listen = cb => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n} // for debug purpose\n\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n//# sourceMappingURL=index.js.map","import { sign, isSupported } from \"u2f-api\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportError } from \"@ledgerhq/errors\";\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new TransportError(message, id); // $FlowFixMe\n\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu, key) {\n  const result = Buffer.alloc(apdu.length);\n\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n\n  return result;\n} // Convert from normal to web-safe, strip trailing \"=\"s\n\n\nconst webSafe64 = base64 => base64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\"); // Convert from web-safe to normal, add trailing \"=\"s\n\n\nconst normal64 = base64 => base64.replace(/-/g, \"+\").replace(/_/g, \"/\") + \"==\".substring(0, 3 * base64.length % 4);\n\nfunction attemptExchange(apdu, timeoutMillis, scrambleKey, unwrap) {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from(\"0000000000000000000000000000000000000000000000000000000000000000\", \"hex\");\n  const signRequest = {\n    version: \"U2F_V2\",\n    keyHandle: webSafe64(keyHandle.toString(\"base64\")),\n    challenge: webSafe64(challenge.toString(\"base64\")),\n    appId: location.origin\n  };\n  log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n  return sign(signRequest, timeoutMillis / 1000).then(response => {\n    const {\n      signatureData\n    } = response;\n\n    if (typeof signatureData === \"string\") {\n      const data = Buffer.from(normal64(signatureData), \"base64\");\n      let result;\n\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach(t => t.emit(\"disconnect\"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from \"@ledgerhq/hw-transport-u2f\";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\n\n\nexport default class TransportU2F extends Transport {\n  /*\n   */\n\n  /*\n   */\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_, _openTimeout = 5000) {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    this.scrambleKey = void 0;\n    this.unwrap = true;\n    transportInstances.push(this);\n  }\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n\n\n  async exchange(apdu) {\n    try {\n      return await attemptExchange(apdu, this.exchangeTimeout, this.scrambleKey, this.unwrap);\n    } catch (e) {\n      const isU2FError = typeof e.metaData === \"object\";\n\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        } // the wrapping make error more usable and \"printable\" to the end user.\n\n\n        throw wrapU2FTransportError(e, \"Failed to sign with Ledger device: U2F \" + e.metaData.type, \"U2F_\" + e.metaData.code);\n      } else {\n        throw e;\n      }\n    }\n  }\n  /**\n   */\n\n\n  setScrambleKey(scrambleKey) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n  /**\n   */\n\n\n  setUnwrap(unwrap) {\n    this.unwrap = unwrap;\n  }\n\n  close() {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n\n}\nTransportU2F.isSupported = isSupported;\n\nTransportU2F.list = () => // this transport is not discoverable but we are going to guess if it is here with isSupported()\nisSupported().then(supported => supported ? [null] : []);\n\nTransportU2F.listen = observer => {\n  let unsubscribed = false;\n  isSupported().then(supported => {\n    if (unsubscribed) return;\n\n    if (supported) {\n      observer.next({\n        type: \"add\",\n        descriptor: null\n      });\n      observer.complete();\n    } else {\n      observer.error(new TransportError(\"U2F browser support is needed for Ledger. \" + \"Please use Chrome, Opera or Firefox with a U2F extension. \" + \"Also make sure you're on an HTTPS connection\", \"U2FNotSupported\"));\n    }\n  });\n  return {\n    unsubscribe: () => {\n      unsubscribed = true;\n    }\n  };\n};\n//# sourceMappingURL=TransportU2F.js.map","/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nconst errorClasses = {};\nconst deserializers = {};\nexport const addCustomErrorDeserializer = (name, deserializer) => {\n    deserializers[name] = deserializer;\n};\nexport const createCustomErrorClass = (name) => {\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for (const k in fields) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object) => {\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        }\n        catch (e) {\n            // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            }\n            else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for (const prop in object) {\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                }\n                catch (e) {\n                    // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        }\n        else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value) => {\n    if (!value)\n        return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)) {\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n}\n//# sourceMappingURL=helpers.js.map","import { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer, } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\"TransactionHasBeenValidatedError\");\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\"TransportExchangeTimeoutError\");\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n    constructor(type, message) {\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n    constructor(message, id) {\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\nexport const StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n};\nexport function getAltStatusMessage(code) {\n    switch (code) {\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */\n    constructor(statusCode, { canBeMappedToChildError = true } = {}) {\n        const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        Object.setPrototypeOf(this, TransportStatusError.prototype);\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nexport class LockedDeviceError extends TransportStatusError {\n    constructor(message) {\n        super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n        Object.setPrototypeOf(this, LockedDeviceError.prototype);\n    }\n}\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n//# sourceMappingURL=index.js.map","let id = 0;\nconst subscribers = [];\n/**\n * Logs something\n *\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type, message, data) => {\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date(),\n    };\n    if (message)\n        obj.message = message;\n    if (data)\n        obj.data = data;\n    dispatch(obj);\n};\n/**\n * A simple tracer function, only expanding the existing log function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param context Anything representing the context where the log occurred\n */\nexport const trace = ({ type, message, data, context, }) => {\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date(),\n    };\n    if (message)\n        obj.message = message;\n    if (data)\n        obj.data = data;\n    if (context)\n        obj.context = context;\n    dispatch(obj);\n};\n/**\n * A simple tracer class, that can be used to avoid repetition when using the `trace` function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param type A given type (not level) for the current local tracer (\"hw\", \"withDevice\", etc.)\n * @param context Anything representing the context where the log occurred\n */\nexport class LocalTracer {\n    constructor(type, context) {\n        this.type = type;\n        this.context = context;\n    }\n    trace(message, data) {\n        trace({\n            type: this.type,\n            message,\n            data,\n            context: this.context,\n        });\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n    }\n    updateContext(contextToAdd) {\n        this.context = Object.assign(Object.assign({}, this.context), contextToAdd);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = type;\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `type`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */\n    withType(type) {\n        return new LocalTracer(type, this.context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with a new `context`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    withContext(context) {\n        return new LocalTracer(this.type, context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `context`,\n     * on which an additional context is merged with the existing one.\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */\n    withUpdatedContext(contextToAdd) {\n        return new LocalTracer(this.type, Object.assign(Object.assign({}, this.context), contextToAdd));\n    }\n}\n/**\n * Adds a subscribers to the emitted logs.\n *\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb) => {\n    subscribers.push(cb);\n    return () => {\n        const i = subscribers.indexOf(cb);\n        if (i !== -1) {\n            // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n            subscribers[i] = subscribers[subscribers.length - 1];\n            subscribers.pop();\n        }\n    };\n};\nfunction dispatch(log) {\n    for (let i = 0; i < subscribers.length; i++) {\n        try {\n            subscribers[i](log);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\nif (typeof window !== \"undefined\") {\n    window.__ledgerLogsListen = listen;\n}\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from \"@ledgerhq/errors\";\nimport { LocalTracer } from \"@ledgerhq/logs\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\nconst DEFAULT_LOG_TYPE = \"transport\";\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */\nclass Transport {\n    constructor({ context, logType } = {}) {\n        this.exchangeTimeout = 30000;\n        this.unresponsiveTimeout = 15000;\n        this.deviceModel = null;\n        this._events = new EventEmitter();\n        /**\n         * Send data to the device using the higher level API.\n         *\n         * @param {number} cla - The instruction class for the command.\n         * @param {number} ins - The instruction code for the command.\n         * @param {number} p1 - The first parameter for the instruction.\n         * @param {number} p2 - The second parameter for the instruction.\n         * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n         * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n         * @param {Object} options - Contains optional options for the exchange function\n         *  - abortTimeoutMs: stop the send after a given timeout. Another timeout exists\n         *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n         * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n         */\n        this.send = (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [StatusCodes.OK], { abortTimeoutMs } = {}) => __awaiter(this, void 0, void 0, function* () {\n            const tracer = this.tracer.withUpdatedContext({ function: \"send\" });\n            if (data.length >= 256) {\n                tracer.trace(\"data.length exceeded 256 bytes limit\", { dataLength: data.length });\n                throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n            }\n            tracer.trace(\"Starting an exchange\", { abortTimeoutMs });\n            const response = yield this.exchange(\n            // The size of the data is added in 1 byte just before `data`\n            Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]), { abortTimeoutMs });\n            tracer.trace(\"Received response from exchange\");\n            const sw = response.readUInt16BE(response.length - 2);\n            if (!statusList.some(s => s === sw)) {\n                throw new TransportStatusError(sw);\n            }\n            return response;\n        });\n        this._appAPIlock = null;\n        this.tracer = new LocalTracer(logType !== null && logType !== void 0 ? logType : DEFAULT_LOG_TYPE, context);\n    }\n    /**\n     * Send data to the device using a low level API.\n     * It's recommended to use the \"send\" method for a higher level API.\n     * @param {Buffer} apdu - The data to send.\n     * @param {Object} options - Contains optional options for the exchange function\n     *  - abortTimeoutMs: stop the exchange after a given timeout. Another timeout exists\n     *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */\n    exchange(_apdu, { abortTimeoutMs: _abortTimeoutMs } = {}) {\n        throw new Error(\"exchange not implemented\");\n    }\n    /**\n     * Send apdus in batch to the device using a low level API.\n     * The default implementation is to call exchange for each apdu.\n     * @param {Array<Buffer>} apdus - array of apdus to send.\n     * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n     */\n    exchangeBulk(apdus, observer) {\n        let unsubscribed = false;\n        const unsubscribe = () => {\n            unsubscribed = true;\n        };\n        const main = () => __awaiter(this, void 0, void 0, function* () {\n            if (unsubscribed)\n                return;\n            for (const apdu of apdus) {\n                const r = yield this.exchange(apdu);\n                if (unsubscribed)\n                    return;\n                const status = r.readUInt16BE(r.length - 2);\n                if (status !== StatusCodes.OK) {\n                    throw new TransportStatusError(status);\n                }\n                observer.next(r);\n            }\n        });\n        main().then(() => !unsubscribed && observer.complete(), e => !unsubscribed && observer.error(e));\n        return { unsubscribe };\n    }\n    /**\n     * Set the \"scramble key\" for the next data exchanges with the device.\n     * Each app can have a different scramble key and it is set internally during instantiation.\n     * @param {string} key - The scramble key to set.\n     * deprecated This method is no longer needed for modern transports and should be migrated away from.\n     * no @ before deprecated as it breaks documentationjs on version 14.0.2\n     * https://github.com/documentationjs/documentation/issues/1596\n     */\n    setScrambleKey(_key) { }\n    /**\n     * Close the connection with the device.\n     *\n     * Note: for certain transports (hw-transport-node-hid-singleton for ex), once the promise resolved,\n     * the transport instance is actually still cached, and the device is disconnected only after a defined timeout.\n     * But for the consumer of the Transport, this does not matter and it can consider the transport to be closed.\n     *\n     * @returns {Promise<void>} A promise that resolves when the transport is closed.\n     */\n    close() {\n        return Promise.resolve();\n    }\n    /**\n     * Listen for an event on the transport instance.\n     * Transport implementations may have specific events. Common events include:\n     * \"disconnect\" : triggered when the transport is disconnected.\n     * @param {string} eventName - The name of the event to listen for.\n     * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n     */\n    on(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n    /**\n     * Stop listening to an event on an instance of transport.\n     */\n    off(eventName, cb) {\n        this._events.removeListener(eventName, cb);\n    }\n    emit(event, ...args) {\n        this._events.emit(event, ...args);\n    }\n    /**\n     * Enable or not logs of the binary exchange\n     */\n    setDebugMode() {\n        console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n    }\n    /**\n     * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n     */\n    setExchangeTimeout(exchangeTimeout) {\n        this.exchangeTimeout = exchangeTimeout;\n    }\n    /**\n     * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n     */\n    setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n        this.unresponsiveTimeout = unresponsiveTimeout;\n    }\n    /**\n     * create() allows to open the first descriptor available or\n     * throw if there is none or if timeout is reached.\n     * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n     * @example\n    TransportFoo.create().then(transport => ...)\n     */\n    static create(openTimeout = 3000, listenTimeout) {\n        return new Promise((resolve, reject) => {\n            let found = false;\n            const sub = this.listen({\n                next: e => {\n                    found = true;\n                    if (sub)\n                        sub.unsubscribe();\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    this.open(e.descriptor, openTimeout).then(resolve, reject);\n                },\n                error: e => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    reject(e);\n                },\n                complete: () => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    if (!found) {\n                        reject(new TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n                    }\n                },\n            });\n            const listenTimeoutId = listenTimeout\n                ? setTimeout(() => {\n                    sub.unsubscribe();\n                    reject(new TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n                }, listenTimeout)\n                : null;\n        });\n    }\n    /**\n     * Wrapper to make an exchange \"atomic\" (blocking any other exchange)\n     *\n     * It also handles \"unresponsiveness\" by emitting \"unresponsive\" and \"responsive\" events.\n     *\n     * @param f The exchange job, using the transport to run\n     * @returns a Promise resolving with the output of the given job\n     */\n    exchangeAtomicImpl(f) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tracer = this.tracer.withUpdatedContext({\n                function: \"exchangeAtomicImpl\",\n                unresponsiveTimeout: this.unresponsiveTimeout,\n            });\n            if (this.exchangeBusyPromise) {\n                tracer.trace(\"Atomic exchange is already busy\");\n                throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n            }\n            // Sets the atomic guard\n            let resolveBusy;\n            const busyPromise = new Promise(r => {\n                resolveBusy = r;\n            });\n            this.exchangeBusyPromise = busyPromise;\n            // The device unresponsiveness handler\n            let unresponsiveReached = false;\n            const timeout = setTimeout(() => {\n                tracer.trace(`Timeout reached, emitting Transport event \"unresponsive\"`, {\n                    unresponsiveTimeout: this.unresponsiveTimeout,\n                });\n                unresponsiveReached = true;\n                this.emit(\"unresponsive\");\n            }, this.unresponsiveTimeout);\n            try {\n                const res = yield f();\n                if (unresponsiveReached) {\n                    tracer.trace(\"Device was unresponsive, emitting responsive\");\n                    this.emit(\"responsive\");\n                }\n                return res;\n            }\n            finally {\n                tracer.trace(\"Finalize, clearing busy guard\");\n                clearTimeout(timeout);\n                if (resolveBusy)\n                    resolveBusy();\n                this.exchangeBusyPromise = null;\n            }\n        });\n    }\n    decorateAppAPIMethods(self, methods, scrambleKey) {\n        for (const methodName of methods) {\n            self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n        }\n    }\n    decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n        return (...args) => __awaiter(this, void 0, void 0, function* () {\n            const { _appAPIlock } = this;\n            if (_appAPIlock) {\n                return Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n            }\n            try {\n                this._appAPIlock = methodName;\n                this.setScrambleKey(scrambleKey);\n                return yield f.apply(ctx, args);\n            }\n            finally {\n                this._appAPIlock = null;\n            }\n        });\n    }\n    /**\n     * Sets the context used by the logging/tracing mechanism\n     *\n     * Useful when re-using (cached) the same Transport instance,\n     * but with a new tracing context.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    setTraceContext(context) {\n        this.tracer = this.tracer.withContext(context);\n    }\n    /**\n     * Updates the context used by the logging/tracing mechanism\n     *\n     * The update only overrides the key-value that are already defined in the current context.\n     *\n     * @param contextToAdd A TraceContext that will be added to the current context\n     */\n    updateTraceContext(contextToAdd) {\n        this.tracer.updateContext(contextToAdd);\n    }\n    /**\n     * Gets the tracing context of the transport instance\n     */\n    getTraceContext() {\n        return this.tracer.getContext();\n    }\n}\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\nexport default Transport;\n//# sourceMappingURL=Transport.js.map","/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nconst errorClasses = {};\nconst deserializers = {};\nexport const addCustomErrorDeserializer = (name, deserializer) => {\n    deserializers[name] = deserializer;\n};\nexport const createCustomErrorClass = (name) => {\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for (const k in fields) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object) => {\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        }\n        catch (e) {\n            // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            }\n            else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for (const prop in object) {\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                }\n                catch (e) {\n                    // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        }\n        else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value) => {\n    if (!value)\n        return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)) {\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n}\n//# sourceMappingURL=helpers.js.map","import { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer, } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\"TransactionHasBeenValidatedError\");\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\"TransportExchangeTimeoutError\");\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n    constructor(type, message) {\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n    constructor(message, id) {\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\nexport const StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n};\nexport function getAltStatusMessage(code) {\n    switch (code) {\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */\n    constructor(statusCode, { canBeMappedToChildError = true } = {}) {\n        const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        Object.setPrototypeOf(this, TransportStatusError.prototype);\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nexport class LockedDeviceError extends TransportStatusError {\n    constructor(message) {\n        super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n        Object.setPrototypeOf(this, LockedDeviceError.prototype);\n    }\n}\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n//# sourceMappingURL=index.js.map","import { TransportError } from \"@ledgerhq/errors\";\nconst Tag = 0x05;\nfunction asUInt16BE(value) {\n    const b = Buffer.alloc(2);\n    b.writeUInt16BE(value, 0);\n    return b;\n}\nconst initialAcc = {\n    data: Buffer.alloc(0),\n    dataLength: 0,\n    sequence: 0,\n};\n/**\n * Object to handle HID frames (encoding and decoding)\n *\n * @param channel\n * @param packetSize The HID protocol packet size in bytes (usually 64)\n */\nconst createHIDframing = (channel, packetSize) => {\n    return {\n        /**\n         * Frames/encodes an APDU message into HID USB packets/frames\n         *\n         * @param apdu The APDU message to send, in a Buffer containing [cla, ins, p1, p2, data length, data(if not empty)]\n         * @returns an array of HID USB frames ready to be sent\n         */\n        makeBlocks(apdu) {\n            // Encodes the APDU length in 2 bytes before the APDU itself.\n            // The length is measured as the number of bytes.\n            // As the size of the APDU `data` should have been added in 1 byte just before `data`,\n            // the minimum size of an APDU is 5 bytes.\n            let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n            const blockSize = packetSize - 5;\n            const nbBlocks = Math.ceil(data.length / blockSize);\n            // Fills data with 0-padding\n            data = Buffer.concat([data, Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0)]);\n            const blocks = [];\n            for (let i = 0; i < nbBlocks; i++) {\n                const head = Buffer.alloc(5);\n                head.writeUInt16BE(channel, 0);\n                head.writeUInt8(Tag, 2);\n                head.writeUInt16BE(i, 3);\n                // `slice` and not `subarray`: this might not be a Node Buffer, but probably only a Uint8Array\n                const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n                blocks.push(Buffer.concat([head, chunk]));\n            }\n            return blocks;\n        },\n        /**\n         * Reduces HID USB packets/frames to one response.\n         *\n         * @param acc The value resulting from (accumulating) the previous call of reduceResponse.\n         *   On first call initialized to `initialAcc`. The accumulator enables handling multi-frames messages.\n         * @param chunk Current chunk to reduce into accumulator\n         * @returns An accumulator value updated with the current chunk\n         */\n        reduceResponse(acc, chunk) {\n            let { data, dataLength, sequence } = acc || initialAcc;\n            if (chunk.readUInt16BE(0) !== channel) {\n                throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n            }\n            if (chunk.readUInt8(2) !== Tag) {\n                throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n            }\n            if (chunk.readUInt16BE(3) !== sequence) {\n                throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n            }\n            // Gets the total length of the response from the 1st frame\n            if (!acc) {\n                dataLength = chunk.readUInt16BE(5);\n            }\n            sequence++;\n            // The total length on the 1st frame takes 2 more bytes\n            const chunkData = chunk.slice(acc ? 5 : 7);\n            data = Buffer.concat([data, chunkData]);\n            // Removes any 0 padding\n            if (data.length > dataLength) {\n                data = data.slice(0, dataLength);\n            }\n            return {\n                data,\n                dataLength,\n                sequence,\n            };\n        },\n        /**\n         * Returns the response message that has been reduced from the HID USB frames\n         *\n         * @param acc The accumulator\n         * @returns A Buffer containing the cleaned response message, or null if no response message, or undefined if the\n         *   accumulator is incorrect (message length is not valid)\n         */\n        getReducedResult(acc) {\n            if (acc && acc.dataLength === acc.data.length) {\n                return acc.data;\n            }\n        },\n    };\n};\nexport default createHIDframing;\n//# sourceMappingURL=hid-framing.js.map","import semver from \"semver\";\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\nexport var DeviceModelId;\n(function (DeviceModelId) {\n    DeviceModelId[\"blue\"] = \"blue\";\n    DeviceModelId[\"nanoS\"] = \"nanoS\";\n    DeviceModelId[\"nanoSP\"] = \"nanoSP\";\n    DeviceModelId[\"nanoX\"] = \"nanoX\";\n    DeviceModelId[\"stax\"] = \"stax\";\n})(DeviceModelId || (DeviceModelId = {}));\nconst devices = {\n    [DeviceModelId.blue]: {\n        id: DeviceModelId.blue,\n        productName: \"Ledger Blue\",\n        productIdMM: 0x00,\n        legacyUsbProductId: 0x0000,\n        usbOnly: true,\n        memorySize: 480 * 1024,\n        masks: [0x31000000, 0x31010000],\n        getBlockSize: (_firwareVersion) => 4 * 1024,\n    },\n    [DeviceModelId.nanoS]: {\n        id: DeviceModelId.nanoS,\n        productName: \"Ledger Nano S\",\n        productIdMM: 0x10,\n        legacyUsbProductId: 0x0001,\n        usbOnly: true,\n        memorySize: 320 * 1024,\n        masks: [0x31100000],\n        getBlockSize: (firmwareVersion) => { var _a; return semver.lt((_a = semver.coerce(firmwareVersion)) !== null && _a !== void 0 ? _a : \"\", \"2.0.0\") ? 4 * 1024 : 2 * 1024; },\n    },\n    [DeviceModelId.nanoSP]: {\n        id: DeviceModelId.nanoSP,\n        productName: \"Ledger Nano S Plus\",\n        productIdMM: 0x50,\n        legacyUsbProductId: 0x0005,\n        usbOnly: true,\n        memorySize: 1533 * 1024,\n        masks: [0x33100000],\n        getBlockSize: (_firmwareVersion) => 32,\n    },\n    [DeviceModelId.nanoX]: {\n        id: DeviceModelId.nanoX,\n        productName: \"Ledger Nano X\",\n        productIdMM: 0x40,\n        legacyUsbProductId: 0x0004,\n        usbOnly: false,\n        memorySize: 2 * 1024 * 1024,\n        masks: [0x33000000],\n        getBlockSize: (_firwareVersion) => 4 * 1024,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n            },\n        ],\n    },\n    [DeviceModelId.stax]: {\n        id: DeviceModelId.stax,\n        productName: \"Ledger Stax\",\n        productIdMM: 0x60,\n        legacyUsbProductId: 0x0006,\n        usbOnly: false,\n        memorySize: 1533 * 1024,\n        masks: [0x33200000],\n        getBlockSize: (_firmwareVersion) => 32,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n            },\n        ],\n    },\n};\nconst productMap = {\n    Blue: DeviceModelId.blue,\n    \"Nano S\": DeviceModelId.nanoS,\n    \"Nano S Plus\": DeviceModelId.nanoSP,\n    \"Nano X\": DeviceModelId.nanoX,\n    Stax: DeviceModelId.stax,\n};\nconst devicesList = Object.values(devices);\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n/**\n *\n */\nexport const getDeviceModel = (id) => {\n    const info = devices[id];\n    if (!info)\n        throw new Error(\"device '\" + id + \"' does not exist\");\n    return info;\n};\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (targetId) => {\n    const deviceModel = devicesList.find(({ masks }) => masks.find(mask => (targetId & 0xffff0000) === mask));\n    return deviceModel;\n};\n/**\n * From a given USB product id, return the deviceModel associated to it.\n *\n * The mapping from the product id is only based on the 2 most significant bytes.\n * For example, Stax is defined with a product id of 0x60ii, a product id 0x6011 would be mapped to it.\n */\nexport const identifyUSBProductId = (usbProductId) => {\n    const legacy = devicesList.find(d => d.legacyUsbProductId === usbProductId);\n    if (legacy)\n        return legacy;\n    const mm = usbProductId >> 8;\n    const deviceModel = devicesList.find(d => d.productIdMM === mm);\n    return deviceModel;\n};\nexport const identifyProductName = (productName) => {\n    const deviceModel = devicesList.find(d => d.id === productMap[productName]);\n    return deviceModel;\n};\nconst bluetoothServices = [];\nconst serviceUuidToInfos = {};\nfor (const id in devices) {\n    const deviceModel = devices[id];\n    const { bluetoothSpec } = deviceModel;\n    if (bluetoothSpec) {\n        for (let i = 0; i < bluetoothSpec.length; i++) {\n            const spec = bluetoothSpec[i];\n            bluetoothServices.push(spec.serviceUuid);\n            serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = Object.assign({ deviceModel }, spec);\n        }\n    }\n}\n/**\n *\n */\nexport const getBluetoothServiceUuids = () => bluetoothServices;\n/**\n *\n */\nexport const getInfosForServiceUuid = (uuid) => serviceUuidToInfos[uuid.toLowerCase()];\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\nconst ledgerDevices = [\n    {\n        vendorId: ledgerUSBVendorId,\n    },\n];\nexport function requestLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const device = yield navigator.usb.requestDevice({\n            filters: ledgerDevices,\n        });\n        return device;\n    });\n}\nexport function getLedgerDevices() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const devices = yield navigator.usb.getDevices();\n        return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n    });\n}\nexport function getFirstLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const existingDevices = yield getLedgerDevices();\n        if (existingDevices.length > 0)\n            return existingDevices[0];\n        return requestLedgerDevice();\n    });\n}\nexport const isSupported = () => Promise.resolve(!!navigator && !!navigator.usb && typeof navigator.usb.getDevices === \"function\");\n//# sourceMappingURL=webusb.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Transport from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/hid-framing\";\nimport { identifyUSBProductId } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportOpenUserCancelled, TransportInterfaceNotAvailable, TransportWebUSBGestureRequired, DisconnectedDeviceDuringOperation, DisconnectedDevice, } from \"@ledgerhq/errors\";\nimport { getLedgerDevices, getFirstLedgerDevice, requestLedgerDevice, isSupported } from \"./webusb\";\nconst configurationValue = 1;\nconst endpointNumber = 3;\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */\nclass TransportWebUSB extends Transport {\n    constructor(device, interfaceNumber) {\n        super();\n        this.channel = Math.floor(Math.random() * 0xffff);\n        this.packetSize = 64;\n        this._disconnectEmitted = false;\n        this._emitDisconnect = (e) => {\n            if (this._disconnectEmitted)\n                return;\n            this._disconnectEmitted = true;\n            this.emit(\"disconnect\", e);\n        };\n        this.device = device;\n        this.interfaceNumber = interfaceNumber;\n        this.deviceModel = identifyUSBProductId(device.productId);\n    }\n    /**\n     * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n     */\n    static request() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const device = yield requestLedgerDevice();\n            return TransportWebUSB.open(device);\n        });\n    }\n    /**\n     * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n     */\n    static openConnected() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const devices = yield getLedgerDevices();\n            if (devices.length === 0)\n                return null;\n            return TransportWebUSB.open(devices[0]);\n        });\n    }\n    /**\n     * Create a Ledger transport with a USBDevice\n     */\n    static open(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield device.open();\n            if (device.configuration === null) {\n                yield device.selectConfiguration(configurationValue);\n            }\n            yield gracefullyResetDevice(device);\n            const iface = device.configurations[0].interfaces.find(({ alternates }) => alternates.some(a => a.interfaceClass === 255));\n            if (!iface) {\n                throw new TransportInterfaceNotAvailable(\"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\");\n            }\n            const interfaceNumber = iface.interfaceNumber;\n            try {\n                yield device.claimInterface(interfaceNumber);\n            }\n            catch (e) {\n                yield device.close();\n                throw new TransportInterfaceNotAvailable(e.message);\n            }\n            const transport = new TransportWebUSB(device, interfaceNumber);\n            const onDisconnect = e => {\n                if (device === e.device) {\n                    // $FlowFixMe\n                    navigator.usb.removeEventListener(\"disconnect\", onDisconnect);\n                    transport._emitDisconnect(new DisconnectedDevice());\n                }\n            };\n            // $FlowFixMe\n            navigator.usb.addEventListener(\"disconnect\", onDisconnect);\n            return transport;\n        });\n    }\n    /**\n     * Release the transport device\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.exchangeBusyPromise;\n            yield this.device.releaseInterface(this.interfaceNumber);\n            yield gracefullyResetDevice(this.device);\n            yield this.device.close();\n        });\n    }\n    /**\n     * Exchange with the device using APDU protocol.\n     * @param apdu\n     * @returns a promise of apdu response\n     */\n    exchange(apdu) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const b = yield this.exchangeAtomicImpl(() => __awaiter(this, void 0, void 0, function* () {\n                const { channel, packetSize } = this;\n                log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n                const framing = hidFraming(channel, packetSize);\n                // Write...\n                const blocks = framing.makeBlocks(apdu);\n                for (let i = 0; i < blocks.length; i++) {\n                    yield this.device.transferOut(endpointNumber, blocks[i]);\n                }\n                // Read...\n                let result;\n                let acc;\n                while (!(result = framing.getReducedResult(acc))) {\n                    const r = yield this.device.transferIn(endpointNumber, packetSize);\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    const buffer = Buffer.from(r.data.buffer);\n                    acc = framing.reduceResponse(acc, buffer);\n                }\n                log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n                return result;\n            })).catch(e => {\n                if (e && e.message && e.message.includes(\"disconnected\")) {\n                    this._emitDisconnect(e);\n                    throw new DisconnectedDeviceDuringOperation(e.message);\n                }\n                throw e;\n            });\n            return b;\n        });\n    }\n    setScrambleKey() { }\n}\n/**\n * Check if WebUSB transport is supported.\n */\nTransportWebUSB.isSupported = isSupported;\n/**\n * List the WebUSB devices that was previously authorized by the user.\n */\nTransportWebUSB.list = getLedgerDevices;\n/**\n * Actively listen to WebUSB devices and emit ONE device\n * that was either accepted before, if not it will trigger the native permission UI.\n *\n * Important: it must be called in the context of a UI click!\n */\nTransportWebUSB.listen = (observer) => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(device => {\n        if (!unsubscribed) {\n            const deviceModel = identifyUSBProductId(device.productId);\n            observer.next({\n                type: \"add\",\n                descriptor: device,\n                deviceModel,\n            });\n            observer.complete();\n        }\n    }, error => {\n        if (window.DOMException && error instanceof window.DOMException && error.code === 18) {\n            observer.error(new TransportWebUSBGestureRequired(error.message));\n        }\n        else {\n            observer.error(new TransportOpenUserCancelled(error.message));\n        }\n    });\n    function unsubscribe() {\n        unsubscribed = true;\n    }\n    return {\n        unsubscribe,\n    };\n};\nexport default TransportWebUSB;\nfunction gracefullyResetDevice(device) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield device.reset();\n        }\n        catch (err) {\n            console.warn(err);\n        }\n    });\n}\n//# sourceMappingURL=TransportWebUSB.js.map"],"names":["splitPath","path","result","split","forEach","element","number","parseInt","isNaN","length","push","foreach","arr","callback","iterate","index","array","then","res","Promise","resolve","hash","data","hasher","sha256","update","digest","checkStellarBip32Path","toString","endsWith","Error","CLA","SW_OK","SW_CANCEL","SW_KEEP_ALIVE","Str","constructor","transport","scrambleKey","this","decorateAppAPIMethods","getAppConfiguration","send","response","multiOpsEnabled","version","getPublicKey","boolValidate","boolDisplay","apdus","pathElts","buffer","alloc","writeUInt32BE","verifyMsg","from","concat","keepAlive","apduResponse","slice","readUInt16BE","offset","rawPublicKey","publicKey","Buffer","versionBuffer","payload","checksum","writeUInt16LE","buf","previous","crc","code","crc16xmodem","unencoded","base32","encode","encodeEd25519PublicKey","signature","detached","verify","Uint8Array","toJSON","verifyEd25519Signature","raw","signTransaction","transaction","bufferSize","chunkSize","chunk","copy","remaining","i","status","signHash_private","signHash","errorClasses","deserializers","addCustomErrorDeserializer","name","deserializer","createCustomErrorClass","C","message","fields","Object","assign","stack","prototype","TransportRaceCondition","TransportError","id","e","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","TransportStatusError","statusCode","statusText","keys","find","k","smsg","getAltStatusMessage","statusCodeStr","Transport","exchangeTimeout","unresponsiveTimeout","deviceModel","_events","async","cla","ins","p1","p2","statusList","exchange","sw","some","s","exchangeBusyPromise","exchangeAtomicImpl","resolveBusy","busyPromise","r","unresponsiveReached","timeout","setTimeout","emit","f","clearTimeout","_appAPIlock","_apdu","setScrambleKey","_key","close","on","eventName","cb","off","removeListener","event","args","setDebugMode","console","warn","setExchangeTimeout","setExchangeUnresponsiveTimeout","create","openTimeout","listenTimeout","reject","found","sub","listen","next","unsubscribe","listenTimeoutId","open","descriptor","error","complete","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","self","methods","methodName","decorateAppAPIMethod","ctx","apply","isSupported","list","subscribers","log","type","obj","String","date","Date","dispatch","window","__ledgerLogsListen","indexOf","pop","webSafe64","base64","replace","transportInstances","TransportU2F","_","_openTimeout","super","unwrap","apdu","timeoutMillis","keyHandle","key","wrapApdu","challenge","signRequest","appId","location","origin","sign","signatureData","substring","attemptExchange","metaData","t","originalError","err","wrapU2FTransportError","setUnwrap","supported","observer","unsubscribed","CustomErrorClass","options","setPrototypeOf","cause","DisconnectedDevice","DisconnectedDeviceDuringOperation","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportWebUSBGestureRequired","HwTransportErrorType","CUSTOM_IMAGE_BOOTLOADER","CUSTOM_IMAGE_EMPTY","DEVICE_NOT_ONBOARDED","DEVICE_NOT_ONBOARDED_2","LOCKED_DEVICE","UNKNOWN_APDU","USER_REFUSED_ON_DEVICE","NOT_ENOUGH_SPACE","canBeMappedToChildError","LockedDeviceError","LocalTracer","context","trace","getContext","setContext","updateContext","contextToAdd","getType","setType","withType","withContext","withUpdatedContext","__awaiter","thisArg","_arguments","P","generator","fulfilled","value","step","rejected","done","logType","abortTimeoutMs","tracer","function","dataLength","_abortTimeoutMs","exchangeBulk","main","setTraceContext","updateTraceContext","getTraceContext","asUInt16BE","b","writeUInt16BE","initialAcc","sequence","DeviceModelId","devices","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","_a","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","stax","devicesList","values","identifyUSBProductId","usbProductId","legacy","d","mm","bluetoothServices","serviceUuidToInfos","spec","ledgerDevices","vendorId","requestLedgerDevice","navigator","usb","requestDevice","filters","getLedgerDevices","getDevices","filter","TransportWebUSB","device","interfaceNumber","channel","Math","floor","random","packetSize","_disconnectEmitted","_emitDisconnect","productId","request","openConnected","configuration","selectConfiguration","gracefullyResetDevice","iface","configurations","interfaces","alternates","a","interfaceClass","claimInterface","onDisconnect","removeEventListener","addEventListener","releaseInterface","framing","makeBlocks","blockSize","nbBlocks","ceil","fill","blocks","head","writeUInt8","reduceResponse","acc","readUInt8","chunkData","getReducedResult","transferOut","transferIn","catch","includes","existingDevices","getFirstLedgerDevice","DOMException","reset"],"sourceRoot":""}